{"meta":{"title":"WCsin","subtitle":"Singals and Systems","description":"Singals and Systems","author":"wcsin","url":"https://wcsincs.github.io.git","root":"/"},"pages":[{"title":"404","date":"2021-05-13T08:02:19.000Z","updated":"2021-05-13T08:02:19.407Z","comments":true,"path":"404/index.html","permalink":"https://wcsincs.github.io.git/404/index.html","excerpt":"","text":""},{"title":"search","date":"2021-05-13T08:02:09.000Z","updated":"2021-05-13T08:02:09.224Z","comments":true,"path":"search/index.html","permalink":"https://wcsincs.github.io.git/search/index.html","excerpt":"","text":""},{"title":"tags","date":"2021-05-13T08:24:53.000Z","updated":"2021-05-13T08:25:28.969Z","comments":true,"path":"tags/index.html","permalink":"https://wcsincs.github.io.git/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"简易FIR低通滤波器","slug":"简易FIR低通滤波器","date":"2021-05-21T08:58:28.353Z","updated":"2021-05-21T09:24:51.873Z","comments":true,"path":"2021/05/21/简易FIR低通滤波器/","link":"","permalink":"https://wcsincs.github.io.git/2021/05/21/%E7%AE%80%E6%98%93FIR%E4%BD%8E%E9%80%9A%E6%BB%A4%E6%B3%A2%E5%99%A8/","excerpt":"","text":"简易FIR低通滤波器前置需求拉普拉斯变换、Z变换、数字信号处理 正文简易的RC低通滤波器系统函数可写为式(1)， $$H(s) = \\frac{V_{out}(s)}{V_{in}(s)} =\\frac{1}{1 + sRC}\\tag{1}$$ 其中，s = jw 关于简易滤波器可以参考文献 [1] 的16.7小节。 参考文献 [2] 的7.2.2小节，可得双线性变换法公式为式 (2) ， $$S = \\frac{2}{T_s} [\\frac{1 - Z^{-1}}{1 + Z^{-1}}]\\tag{2}$$ 其中， $$T_s为采样间隔，f_s为采样频率 \\f_s = \\frac{1}{T_s}$$ 将RC滤波器系统函数进行双线性变换可得， $$\\begin{align}H(s) &amp;= \\frac{1}{sRC} \\ &amp;= \\frac{1} {2f_s RC (\\frac{1 - Z^{-1}}{1 + Z^{-1}}) + 1} \\ &amp;= \\frac{1 + Z^{-1}} {2f_s RC(1 - Z^{-1}) + (1 + Z^{-1})} \\ &amp;= \\frac{1 + Z^{-1}} {1 - \\frac{B} {A}Z^{-1}}\\end{align}\\tag{3}$$ 结果进行了归一化，其中， $$A = 2 f_s RC + 1 \\B = 2 f_s RC - 1$$ 参考文献 [2] 的 6.0 至 6.2小节，可将其转换为差分方程，表达为式 (4) ， $$y[k] = \\frac{1}{A} x[k] + \\frac{1}{A} x[k - 1] + \\frac{B}{A} y[k - 1]\\tag{4}$$ 至此已说明FIR低通滤波器简易原理，可用以下.m文件代码仿真实验， 12345678910111213141516171819202122232425262728293031323334353637383940414243444546clear allf_s = 44100; %采样频率f_c = 200; %滤波器截至频率 N = 5120; %采样点数 f_test = 100; %测试频率 n = 0:N - 1; %信号重构点数T_length = n/f_s; %时间序列RC = 1/(2 * pi * f_c); %实际滤波器的RC值A = 2 * f_s * RC + 1; %归一化系数B = 2 * f_s * RC - 1;Y = zeros(1,N);X = Frequency(f_test, N, f_s);Y(:,1) = X(:,1);for k = 2:N Y(:,k) = 1/A*X(:,k) + 1/A*X(:,k-1) + B/A*Y(:,k-1);endfigure(2)plot(T_length, Y);axis([0 5*1/f_test -1 1]);grid onfunction x = Frequency(f, N, f_s)f_function = f;N_function = N;f_s_function = f_s;n_function = 0:N_function - 1; %信号重构点数t_function = n_function/f_s_function; %时间序列x = sin(2*pi*f_function*t_function);figure(1)plot(t_function, x);axis([0 5*1/f_function -1 1]);grid onend 参考文献[1]海特, W. H. ), 凯默利,等. 工程电路分析: 第8版[M]. 电子工业出版社, 2012. [2]奥本海姆, 谢弗黄建国, 刘树棠,等. 离散时间信号处理 : Discrete-time signal processing[M]. 电子工业出版社, 2015.","categories":[],"tags":[{"name":"信号相关","slug":"信号相关","permalink":"https://wcsincs.github.io.git/tags/%E4%BF%A1%E5%8F%B7%E7%9B%B8%E5%85%B3/"},{"name":"FIR","slug":"FIR","permalink":"https://wcsincs.github.io.git/tags/FIR/"},{"name":"数字信号处理","slug":"数字信号处理","permalink":"https://wcsincs.github.io.git/tags/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/"}]},{"title":"冲击信号的合成","slug":"冲激信号合成","date":"2021-05-13T09:02:11.074Z","updated":"2021-05-13T12:04:39.163Z","comments":true,"path":"2021/05/13/冲激信号合成/","link":"","permalink":"https://wcsincs.github.io.git/2021/05/13/%E5%86%B2%E6%BF%80%E4%BF%A1%E5%8F%B7%E5%90%88%E6%88%90/","excerpt":"","text":"冲激信号的频谱首先分析冲激信号的频谱，对单位冲击序列进行傅里叶变化可得，$$ \\delta[n] \\iff 1 \\tag{1} $$ 12\\delta[n] \\iff 1\\tag&#123;1&#125; 由上式可得，其频谱覆盖全部频率，将所有频率叠加即可获取该冲激信号， 如将1 - 20kHZ的信号进行合成即可得到一个冲激信号。 .m文件代码如下，可自行测试 12345678910111213141516171819202122232425262728293031323334353637clear all f_s = 44100; %采样频率 N = 1024; %采样点数 F_start = 1; %起始频率F_between = 1; %频率间隔F_end = 20000; %截至频率T_length = 0 : 0.1/N : 0.1-0.1/N; %时间跨度F = F_start:F_between:F_end; %频率跨度Y = zeros(1,N);for i = 1:length(F) %叠加合成 Y = Y + Frequency(F(i), N, f_s);endplot(T_length, Y./max(Y)); %结果进行了归一化axis([0 0.02 0 1]);grid onfunction y = Frequency(f, N, f_s)f_function = f;N_function = N;f_s_function = f_s;n_function = 0:N_function - 1; %信号重构点数t_function = n_function/f_s_function; %时间序列y = sin(2*pi*f_function*t_function);% plot(t, y);% axis([0 1/f -1 1]);end","categories":[],"tags":[{"name":"信号相关","slug":"信号相关","permalink":"https://wcsincs.github.io.git/tags/%E4%BF%A1%E5%8F%B7%E7%9B%B8%E5%85%B3/"}]},{"title":"Hello World","slug":"hello-world","date":"2021-05-13T06:26:59.068Z","updated":"2021-05-13T11:56:34.075Z","comments":true,"path":"2021/05/13/hello-world/","link":"","permalink":"https://wcsincs.github.io.git/2021/05/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"信号相关","slug":"信号相关","permalink":"https://wcsincs.github.io.git/tags/%E4%BF%A1%E5%8F%B7%E7%9B%B8%E5%85%B3/"},{"name":"FIR","slug":"FIR","permalink":"https://wcsincs.github.io.git/tags/FIR/"},{"name":"数字信号处理","slug":"数字信号处理","permalink":"https://wcsincs.github.io.git/tags/%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86/"}]}